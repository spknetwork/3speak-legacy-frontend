{% extends './layout.twig' %}

{% block style %}
  <style>
    body {
      background-color: #f9f9fa
    }

    .flex {
      -webkit-box-flex: 1;
      -ms-flex: 1 1 auto;
      flex: 1 1 auto
    }

    @media (max-width:991.98px) {
      .padding {
        padding: 1.5rem
      }
    }

    @media (max-width:767.98px) {
      .padding {
        padding: 1rem
      }
    }

    .padding {
      padding: 5rem
    }

    .card {
      background: #fff;
      border-width: 0;
      border-radius: .25rem;
      box-shadow: 0 1px 3px rgba(0, 0, 0, .05);
      margin-bottom: 1.5rem
    }

    .card {
      position: relative;
      display: flex;
      flex-direction: column;
      min-width: 0;
      word-wrap: break-word;
      background-color: #fff;
      background-clip: border-box;
      border: 1px solid rgba(19, 24, 44, .125);
      border-radius: .25rem
    }

    .card-header {
      padding: .75rem 1.25rem;
      margin-bottom: 0;
      background-color: rgba(19, 24, 44, .03);
      border-bottom: 1px solid rgba(19, 24, 44, .125)
    }

    .card-header:first-child {
      border-radius: calc(.25rem - 1px) calc(.25rem - 1px) 0 0
    }

    card-footer,
    .card-header {
      background-color: transparent;
      border-color: rgba(160, 175, 185, .15);
      background-clip: padding-box
    }
  </style>
{% endblock %}

{% block body %}
  <a href="/c/{{ poll.communityId }}">Go back <</a>

  {% if alreadyVoted == false %}
    <div class="page-content page-container" id="voting-body">
      <div class="padding">
        <div class="row">
          <div class="container-fluid d-flex justify-content-center">
            <div class="col-sm-8 col-md-6">
              <div class="card">
                <div class="card-header">{{ poll.question|striptags }}</div>
                <div class="card-body">
                  {% for choice in poll.answers %}
                    <button class="polling-button" data-choice="{{ choice|striptags }}">
                      <b>{{ choice|striptags }}</b>
                    </button>
                  {% endfor %}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  {% endif %}

  <div class="page-content page-container{% if alreadyVoted == false %} d-none{% endif %}" id="results-body">
    <div class="padding">
      <div class="row">
        <div class="container-fluid d-flex justify-content-center">
          <div class="col-sm-8 col-md-6">
            <div class="card">
              <div class="card-header">{{ poll.question|striptags }}</div>
              <div class="card-body" style="height: 420px">
                <div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;">
                  <div class="chartjs-size-monitor-expand" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;">
                    <div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div>
                  </div>
                  <div class="chartjs-size-monitor-shrink" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;">
                    <div style="position:absolute;width:200%;height:200%;left:0; top:0"></div>
                  </div>
                </div> <canvas id="chart-line" width="299" height="100%" class="chartjs-render-monitor" style="display: block; width: 299px; height: 200px;"></canvas>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
{% endblock %}

{% block script %}
  <script src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.bundle.min.js'></script>
  <script>
    $(() => {
      let ctx = $("#chart-line");
      let chart = new Chart(ctx, {
        type: 'horizontalBar',
        data: {
          labels: [{% for set in votes %}'{{ set[0]|striptags }}',{% endfor %}],
          datasets: [{
            data: [{% for set in votes %}{{ set[1] }},{% endfor %}],
            label: "",
            backgroundColor: ["AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "Blue", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGrey", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "DarkOrange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkSlateGrey", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DimGrey", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "Grey", "Green", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGray", "LightGrey", "LightGreen", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSlateGrey", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RebeccaPurple", "Red", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "SlateGrey", "Snow", "SpringGreen", "SteelBlue", "Tan", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen",
            ].sort(function (a, b) { return 0.5 - Math.random() }),
            fill: false
          }]
        },
        options: {
          title: {
            display: true,
            text: '{{ poll.question|striptags }}'
          },
          scales: {
            xAxes: [{
              ticks: {
                beginAtZero: true,
                stepSize: 10,
                max: 100
              }
            }]
          }
        }
      });

      $('.polling-button').on('click', function() {
        let choice = $(this).data('choice');
        let pollId = '{{ poll.pollId }}';
        $.ajax({
          url: '/api/poll/vote',
          type: 'post',
          data: {choice, pollId},
          success: (res) => {
            if (res.error) {
              alert(res.error)
            } else {
              window.location.reload()
            }
          }
        })
      })
    })
  </script>
{% endblock %}
